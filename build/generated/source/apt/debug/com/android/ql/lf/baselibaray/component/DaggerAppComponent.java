// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.android.ql.lf.baselibaray.component;

import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class DaggerAppComponent implements AppComponent {
  private Provider<OkHttpClient> createOkHttpClientProvider;

  private Provider<Retrofit> createRetrofitProvider;

  private DaggerAppComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.createOkHttpClientProvider =
        DoubleCheck.provider(AppModule_CreateOkHttpClientFactory.create(builder.appModule));
    this.createRetrofitProvider =
        DoubleCheck.provider(
            AppModule_CreateRetrofitFactory.create(builder.appModule, createOkHttpClientProvider));
  }

  @Override
  public Retrofit retrofit() {
    return createRetrofitProvider.get();
  }

  public static final class Builder {
    private AppModule appModule;

    private Builder() {}

    public AppComponent build() {
      if (appModule == null) {
        throw new IllegalStateException(AppModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerAppComponent(this);
    }

    public Builder appModule(AppModule appModule) {
      this.appModule = Preconditions.checkNotNull(appModule);
      return this;
    }
  }
}
